module.exports = {
  euclidean: function(v1, v2) {
      var total = 0;
      for (var i = 0; i < v1.length; i++) {
         total += Math.pow(v2[i] - v1[i], 2);
      }
      return Math.sqrt(total);
   },
   manhattan: function(v1, v2) {
     var total = 0;
     for (var i = 0; i < v1.length ; i++) {
        total += Math.abs(v2[i] - v1[i]);
     }
     return total;
   },
   max: function(v1, v2) {
     var max = 0;
     for (var i = 0; i < v1.length; i++) {
        max = Math.max(max , Math.abs(v2[i] - v1[i]));
     }
     return max;
   },
   cosSimilarity: function(v1, v2) {
     v1 = v1.map(function(v) {
       return v1.length;
     });
     v2 = v2.map(function(v) {
       return v2.length;
     });

    console.log(intersect);
    var max = 0;
    for (var i = 0; i < v1.length; i++) {
       max = Math.max(max , Math.abs(v2[i] - v1[i]));
    }
    return max;
   }
};

function intersectArray (arr1, arr2) {
  var res = [];
  for (var i=0; i < arr1.length; i++){
    if (arr2.indexOf(arr1[i]) != -1){
        res.push(arr1[i]);
    }
  }
  return res;
}

function countWords(sentence) {
  var index = {},
      words = sentence
              .replace(/[.,?!;()"'-]/g, " ")
              .replace(/\s+/g, " ")
              .toLowerCase()
              .split(" ");

    words.forEach(function (word) {
        if (!(index.hasOwnProperty(word))) {
            index[word] = 0;
        }
        index[word]++;
    });

    return index;
}
